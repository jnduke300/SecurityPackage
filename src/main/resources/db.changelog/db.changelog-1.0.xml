<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.3.xsd">

    <changeSet id="add_cs_user_privileges" author="jackson.nduke">
        <sql dbms="postgresql" splitStatements="true">
            CREATE USER ${user_name} WITH PASSWORD '${password}';
            GRANT CONNECT ON DATABASE ${database} TO ${user_name};
            ALTER DEFAULT PRIVILEGES IN SCHEMA ${schema} GRANT SELECT, INSERT, UPDATE, DELETE, REFERENCES
            ON TABLES TO ${user_name};
            ALTER DEFAULT PRIVILEGES IN SCHEMA ${schema} GRANT USAGE ON SEQUENCES TO ${user_name};
            ALTER DEFAULT PRIVILEGES IN SCHEMA ${schema} GRANT EXECUTE ON FUNCTIONS TO ${user_name};
        </sql>
    </changeSet>

    <changeSet id="grant_permission_to_cs_user" author="jackson.nduke">
        <sql dbms="postgresql" splitStatements="true">
            REVOKE ALL
            ON ALL TABLES IN SCHEMA ${schema}
            FROM ${schema};

            GRANT SELECT, INSERT, UPDATE, DELETE
            ON ALL TABLES IN SCHEMA ${schema}
            TO ${user_name};
        </sql>
    </changeSet>

    <changeSet id="create-user-table" author="jackson.nduke">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="USERS"/>
            </not>
        </preConditions>
        <createTable tableName="USERS">
            <column name="id" type="varchar2(36)">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="version" type="bigint"/>
            <column name="username" type="varchar2(36)">
                <constraints nullable="false"/>
            </column>
            <column name="password" type="varchar2(50)">
                <constraints nullable="false"/>
            </column>
            <column name="enabled" type="boolean" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
            <column name="accountNonLocked" type="boolean" defaultValueBoolean="false">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <addUniqueConstraint tableName="USERS" constraintName="UDX_USERS"
                             columnNames="username"/>
    </changeSet>

    <changeSet id="add-tenant-id-to-USERS-table" author="jackson.nduke">
        <addColumn tableName="USERS">
            <column name="TENANT_ID" type="VARCHAR(30)" defaultValue="0">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="USER_row_level_security" author="jackson.nduke">
        <sql dbms="postgresql" splitStatements="true">
            ALTER TABLE USERS ENABLE ROW LEVEL SECURITY;
            DROP POLICY IF EXISTS USERS_tenant_isolation_policy ON USERS;
            CREATE POLICY USERS_tenant_isolation_policy ON USERS
            USING (tenant_id = current_setting('app.tenant_id')::VARCHAR);
        </sql>
    </changeSet>

</databaseChangeLog>